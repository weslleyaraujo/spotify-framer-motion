# ==
# Global interfaces
# ==

type Artist {
  id: ID!
  name: String!
  listeners: Int!
  cover: String!
  popular: [Song!]!
}

type Album {
  id: ID!
  name: String!
  artist: ID!
  songs: [ID!]!
  cover: String!
}

type Song {
  id: ID!
  name: String!
  artist: ID!
  album: ID!
}

# ==
# Application interfaces
# ==
type Node {
  id: ID!
}

type User {
  id: ID!
  name: String!
}

enum SectionType {
  ALBUM
  ARTIST
  PLAYLIST
}

type SectionItem {
  id: ID!
  name: String!
  cover: String!
  type: SectionType!
  contentId: ID!
}

type Section {
  id: ID!
  title: String!
  items: [SectionItem!]!
}

type Feed {
  id: ID!
  sections: [Section!]!
}

enum SearchResultType {
  TRACK
  ALBUM
  ARTIST
  PLAYLIST
}

type SearchResult {
  name: String!
  type: SearchResultType
  id: ID!
}

type Query {
  # user: User!
  feed: Feed!
  artist(id: ID!): Artist!
  search(term: String!): [SearchResult!]!
  album(id: ID!): Album!
}
